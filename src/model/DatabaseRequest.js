/**
 * Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DatabaseRequest model module.
 * @module model/DatabaseRequest
 * @version 1.0.2
 */
class DatabaseRequest {
    /**
     * Constructs a new <code>DatabaseRequest</code>.
     * @alias module:model/DatabaseRequest
     * @param name {String} name is case insensitive
     * @param type {module:model/DatabaseRequest.TypeEnum} 
     * @param version {String} 
     * @param mode {module:model/DatabaseRequest.ModeEnum} 
     */
    constructor(name, type, version, mode) { 
        
        DatabaseRequest.initialize(this, name, type, version, mode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, type, version, mode) { 
        obj['name'] = name;
        obj['type'] = type;
        obj['version'] = version;
        obj['mode'] = mode;
    }

    /**
     * Constructs a <code>DatabaseRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatabaseRequest} obj Optional instance to populate.
     * @return {module:model/DatabaseRequest} The populated <code>DatabaseRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatabaseRequest();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'String');
            }
            if (data.hasOwnProperty('accessibility')) {
                obj['accessibility'] = ApiClient.convertToType(data['accessibility'], 'String');
            }
            if (data.hasOwnProperty('cpu')) {
                obj['cpu'] = ApiClient.convertToType(data['cpu'], 'Number');
            }
            if (data.hasOwnProperty('memory')) {
                obj['memory'] = ApiClient.convertToType(data['memory'], 'Number');
            }
            if (data.hasOwnProperty('storage')) {
                obj['storage'] = ApiClient.convertToType(data['storage'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * name is case insensitive
 * @member {String} name
 */
DatabaseRequest.prototype['name'] = undefined;

/**
 * @member {module:model/DatabaseRequest.TypeEnum} type
 */
DatabaseRequest.prototype['type'] = undefined;

/**
 * @member {String} version
 */
DatabaseRequest.prototype['version'] = undefined;

/**
 * @member {module:model/DatabaseRequest.ModeEnum} mode
 */
DatabaseRequest.prototype['mode'] = undefined;

/**
 * @member {module:model/DatabaseRequest.AccessibilityEnum} accessibility
 * @default 'PRIVATE'
 */
DatabaseRequest.prototype['accessibility'] = 'PRIVATE';

/**
 * unit is millicores (m). 1000m = 1 cpu
 * @member {Number} cpu
 * @default 250
 */
DatabaseRequest.prototype['cpu'] = 250;

/**
 * unit is MB. 1024 MB = 1GB
 * @member {Number} memory
 * @default 256
 */
DatabaseRequest.prototype['memory'] = 256;

/**
 * unit is MB
 * @member {Number} storage
 * @default 10240
 */
DatabaseRequest.prototype['storage'] = 10240;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
DatabaseRequest['TypeEnum'] = {

    /**
     * value: "POSTGRESQL"
     * @const
     */
    "POSTGRESQL": "POSTGRESQL",

    /**
     * value: "MYSQL"
     * @const
     */
    "MYSQL": "MYSQL",

    /**
     * value: "MONGODB"
     * @const
     */
    "MONGODB": "MONGODB",

    /**
     * value: "REDIS"
     * @const
     */
    "REDIS": "REDIS"
};


/**
 * Allowed values for the <code>mode</code> property.
 * @enum {String}
 * @readonly
 */
DatabaseRequest['ModeEnum'] = {

    /**
     * value: "MANAGED"
     * @const
     */
    "MANAGED": "MANAGED",

    /**
     * value: "CONTAINER"
     * @const
     */
    "CONTAINER": "CONTAINER"
};


/**
 * Allowed values for the <code>accessibility</code> property.
 * @enum {String}
 * @readonly
 */
DatabaseRequest['AccessibilityEnum'] = {

    /**
     * value: "PUBLIC"
     * @const
     */
    "PUBLIC": "PUBLIC",

    /**
     * value: "PRIVATE"
     * @const
     */
    "PRIVATE": "PRIVATE"
};



export default DatabaseRequest;

