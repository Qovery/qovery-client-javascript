/**
 * Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HelmDeployRequest model module.
 * @module model/HelmDeployRequest
 * @version $(grep &#39;version&#39; _build/openapi.yaml | head -1 | tr &#39;:&#39; &#39;\n&#39; | tail -1 | tr -d &#39; &#39;)
 */
class HelmDeployRequest {
    /**
     * Constructs a new <code>HelmDeployRequest</code>.
     * @alias module:model/HelmDeployRequest
     */
    constructor() { 
        
        HelmDeployRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HelmDeployRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HelmDeployRequest} obj Optional instance to populate.
     * @return {module:model/HelmDeployRequest} The populated <code>HelmDeployRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HelmDeployRequest();

            if (data.hasOwnProperty('chart_version')) {
                obj['chart_version'] = ApiClient.convertToType(data['chart_version'], 'String');
            }
            if (data.hasOwnProperty('git_commit_id')) {
                obj['git_commit_id'] = ApiClient.convertToType(data['git_commit_id'], 'String');
            }
            if (data.hasOwnProperty('values_override_git_commit_id')) {
                obj['values_override_git_commit_id'] = ApiClient.convertToType(data['values_override_git_commit_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HelmDeployRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HelmDeployRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['chart_version'] && !(typeof data['chart_version'] === 'string' || data['chart_version'] instanceof String)) {
            throw new Error("Expected the field `chart_version` to be a primitive type in the JSON string but got " + data['chart_version']);
        }
        // ensure the json data is a string
        if (data['git_commit_id'] && !(typeof data['git_commit_id'] === 'string' || data['git_commit_id'] instanceof String)) {
            throw new Error("Expected the field `git_commit_id` to be a primitive type in the JSON string but got " + data['git_commit_id']);
        }
        // ensure the json data is a string
        if (data['values_override_git_commit_id'] && !(typeof data['values_override_git_commit_id'] === 'string' || data['values_override_git_commit_id'] instanceof String)) {
            throw new Error("Expected the field `values_override_git_commit_id` to be a primitive type in the JSON string but got " + data['values_override_git_commit_id']);
        }

        return true;
    }


}



/**
 * version of the chart to deploy. Cannot be set if `git_commit_id` is defined 
 * @member {String} chart_version
 */
HelmDeployRequest.prototype['chart_version'] = undefined;

/**
 * Commit to deploy for chart source. Cannot be set if `version` is defined 
 * @member {String} git_commit_id
 */
HelmDeployRequest.prototype['git_commit_id'] = undefined;

/**
 * Commit to deploy for values override 
 * @member {String} values_override_git_commit_id
 */
HelmDeployRequest.prototype['values_override_git_commit_id'] = undefined;






export default HelmDeployRequest;

