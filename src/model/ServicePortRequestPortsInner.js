/**
 * Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PortProtocolEnum from './PortProtocolEnum';

/**
 * The ServicePortRequestPortsInner model module.
 * @module model/ServicePortRequestPortsInner
 * @version $(grep &#39;version&#39; _build/openapi.yaml | head -1 | tr &#39;:&#39; &#39;\n&#39; | tail -1 | tr -d &#39; &#39;)
 */
class ServicePortRequestPortsInner {
    /**
     * Constructs a new <code>ServicePortRequestPortsInner</code>.
     * @alias module:model/ServicePortRequestPortsInner
     * @param internalPort {Number} The listening port of your service.
     * @param publiclyAccessible {Boolean} Expose the port to the world
     */
    constructor(internalPort, publiclyAccessible) { 
        
        ServicePortRequestPortsInner.initialize(this, internalPort, publiclyAccessible);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, internalPort, publiclyAccessible) { 
        obj['internal_port'] = internalPort;
        obj['publicly_accessible'] = publiclyAccessible;
    }

    /**
     * Constructs a <code>ServicePortRequestPortsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServicePortRequestPortsInner} obj Optional instance to populate.
     * @return {module:model/ServicePortRequestPortsInner} The populated <code>ServicePortRequestPortsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServicePortRequestPortsInner();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('internal_port')) {
                obj['internal_port'] = ApiClient.convertToType(data['internal_port'], 'Number');
            }
            if (data.hasOwnProperty('external_port')) {
                obj['external_port'] = ApiClient.convertToType(data['external_port'], 'Number');
            }
            if (data.hasOwnProperty('publicly_accessible')) {
                obj['publicly_accessible'] = ApiClient.convertToType(data['publicly_accessible'], 'Boolean');
            }
            if (data.hasOwnProperty('is_default')) {
                obj['is_default'] = ApiClient.convertToType(data['is_default'], 'Boolean');
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = PortProtocolEnum.constructFromObject(data['protocol']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServicePortRequestPortsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServicePortRequestPortsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ServicePortRequestPortsInner.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

ServicePortRequestPortsInner.RequiredProperties = ["internal_port", "publicly_accessible"];

/**
 * @member {String} id
 */
ServicePortRequestPortsInner.prototype['id'] = undefined;

/**
 * @member {String} name
 */
ServicePortRequestPortsInner.prototype['name'] = undefined;

/**
 * The listening port of your service.
 * @member {Number} internal_port
 */
ServicePortRequestPortsInner.prototype['internal_port'] = undefined;

/**
 * The exposed port for your service. This is optional. If not set a default port will be used.
 * @member {Number} external_port
 */
ServicePortRequestPortsInner.prototype['external_port'] = undefined;

/**
 * Expose the port to the world
 * @member {Boolean} publicly_accessible
 */
ServicePortRequestPortsInner.prototype['publicly_accessible'] = undefined;

/**
 * is the default port to use for domain
 * @member {Boolean} is_default
 */
ServicePortRequestPortsInner.prototype['is_default'] = undefined;

/**
 * @member {module:model/PortProtocolEnum} protocol
 */
ServicePortRequestPortsInner.prototype['protocol'] = undefined;






export default ServicePortRequestPortsInner;

