/**
 * [BETA] Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is in Beta and still in progress. Some endpoints are not available yet. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BetaQoveryApi);
  }
}(this, function(expect, BetaQoveryApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BetaQoveryApi.CloudProviderCredentialsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CloudProviderCredentialsApi', function() {
    describe('createAWSCredentials', function() {
      it('should call createAWSCredentials successfully', function(done) {
        //uncomment below and update the code to test createAWSCredentials
        //instance.createAWSCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDOCredentials', function() {
      it('should call createDOCredentials successfully', function(done) {
        //uncomment below and update the code to test createDOCredentials
        //instance.createDOCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createScalewayCredentials', function() {
      it('should call createScalewayCredentials successfully', function(done) {
        //uncomment below and update the code to test createScalewayCredentials
        //instance.createScalewayCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAWSCredentials', function() {
      it('should call deleteAWSCredentials successfully', function(done) {
        //uncomment below and update the code to test deleteAWSCredentials
        //instance.deleteAWSCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDOCredentials', function() {
      it('should call deleteDOCredentials successfully', function(done) {
        //uncomment below and update the code to test deleteDOCredentials
        //instance.deleteDOCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteScalewayCredentials', function() {
      it('should call deleteScalewayCredentials successfully', function(done) {
        //uncomment below and update the code to test deleteScalewayCredentials
        //instance.deleteScalewayCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editAWSCredentials', function() {
      it('should call editAWSCredentials successfully', function(done) {
        //uncomment below and update the code to test editAWSCredentials
        //instance.editAWSCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editDOCredentials', function() {
      it('should call editDOCredentials successfully', function(done) {
        //uncomment below and update the code to test editDOCredentials
        //instance.editDOCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editScalewayCredentials', function() {
      it('should call editScalewayCredentials successfully', function(done) {
        //uncomment below and update the code to test editScalewayCredentials
        //instance.editScalewayCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAWSCredentials', function() {
      it('should call listAWSCredentials successfully', function(done) {
        //uncomment below and update the code to test listAWSCredentials
        //instance.listAWSCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDOCredentials', function() {
      it('should call listDOCredentials successfully', function(done) {
        //uncomment below and update the code to test listDOCredentials
        //instance.listDOCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listScalewayCredentials', function() {
      it('should call listScalewayCredentials successfully', function(done) {
        //uncomment below and update the code to test listScalewayCredentials
        //instance.listScalewayCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
