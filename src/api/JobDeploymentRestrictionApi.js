/**
 * Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import JobDeploymentRestrictionRequest from '../model/JobDeploymentRestrictionRequest';
import JobDeploymentRestrictionResponse from '../model/JobDeploymentRestrictionResponse';
import JobDeploymentRestrictionResponseList from '../model/JobDeploymentRestrictionResponseList';

/**
* JobDeploymentRestriction service.
* @module api/JobDeploymentRestrictionApi
* @version $(grep 'version' _build/openapi.yaml | head -1 | tr ':' '\n' | tail -1 | tr -d ' ')
*/
export default class JobDeploymentRestrictionApi {

    /**
    * Constructs a new JobDeploymentRestrictionApi. 
    * @alias module:api/JobDeploymentRestrictionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createJobDeploymentRestriction operation.
     * @callback module:api/JobDeploymentRestrictionApi~createJobDeploymentRestrictionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JobDeploymentRestrictionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a job deployment restriction
     * Create a job deployment restriction
     * @param {String} jobId Job ID
     * @param {Object} opts Optional parameters
     * @param {module:model/JobDeploymentRestrictionRequest} [jobDeploymentRestrictionRequest] 
     * @param {module:api/JobDeploymentRestrictionApi~createJobDeploymentRestrictionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JobDeploymentRestrictionResponse}
     */
    createJobDeploymentRestriction(jobId, opts, callback) {
      opts = opts || {};
      let postBody = opts['jobDeploymentRestrictionRequest'];
      // verify the required parameter 'jobId' is set
      if (jobId === undefined || jobId === null) {
        throw new Error("Missing the required parameter 'jobId' when calling createJobDeploymentRestriction");
      }

      let pathParams = {
        'jobId': jobId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth', 'bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = JobDeploymentRestrictionResponse;
      return this.apiClient.callApi(
        '/job/{jobId}/deploymentRestriction', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteJobDeploymentRestriction operation.
     * @callback module:api/JobDeploymentRestrictionApi~deleteJobDeploymentRestrictionCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a job deployment restriction
     * Delete a job deployment restriction
     * @param {String} jobId Job ID
     * @param {String} deploymentRestrictionId Deployment Restriction ID
     * @param {module:api/JobDeploymentRestrictionApi~deleteJobDeploymentRestrictionCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteJobDeploymentRestriction(jobId, deploymentRestrictionId, callback) {
      let postBody = null;
      // verify the required parameter 'jobId' is set
      if (jobId === undefined || jobId === null) {
        throw new Error("Missing the required parameter 'jobId' when calling deleteJobDeploymentRestriction");
      }
      // verify the required parameter 'deploymentRestrictionId' is set
      if (deploymentRestrictionId === undefined || deploymentRestrictionId === null) {
        throw new Error("Missing the required parameter 'deploymentRestrictionId' when calling deleteJobDeploymentRestriction");
      }

      let pathParams = {
        'jobId': jobId,
        'deploymentRestrictionId': deploymentRestrictionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth', 'bearerAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/job/{jobId}/deploymentRestriction/{deploymentRestrictionId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the editJobDeploymentRestriction operation.
     * @callback module:api/JobDeploymentRestrictionApi~editJobDeploymentRestrictionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JobDeploymentRestrictionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit a job deployment restriction
     * Edit a job deployment restriction
     * @param {String} jobId Job ID
     * @param {String} deploymentRestrictionId Deployment Restriction ID
     * @param {Object} opts Optional parameters
     * @param {module:model/JobDeploymentRestrictionRequest} [jobDeploymentRestrictionRequest] 
     * @param {module:api/JobDeploymentRestrictionApi~editJobDeploymentRestrictionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JobDeploymentRestrictionResponse}
     */
    editJobDeploymentRestriction(jobId, deploymentRestrictionId, opts, callback) {
      opts = opts || {};
      let postBody = opts['jobDeploymentRestrictionRequest'];
      // verify the required parameter 'jobId' is set
      if (jobId === undefined || jobId === null) {
        throw new Error("Missing the required parameter 'jobId' when calling editJobDeploymentRestriction");
      }
      // verify the required parameter 'deploymentRestrictionId' is set
      if (deploymentRestrictionId === undefined || deploymentRestrictionId === null) {
        throw new Error("Missing the required parameter 'deploymentRestrictionId' when calling editJobDeploymentRestriction");
      }

      let pathParams = {
        'jobId': jobId,
        'deploymentRestrictionId': deploymentRestrictionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth', 'bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = JobDeploymentRestrictionResponse;
      return this.apiClient.callApi(
        '/job/{jobId}/deploymentRestriction/{deploymentRestrictionId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getJobDeploymentRestrictions operation.
     * @callback module:api/JobDeploymentRestrictionApi~getJobDeploymentRestrictionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JobDeploymentRestrictionResponseList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get job deployment restrictions
     * Get job deployment restrictions
     * @param {String} jobId Job ID
     * @param {module:api/JobDeploymentRestrictionApi~getJobDeploymentRestrictionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JobDeploymentRestrictionResponseList}
     */
    getJobDeploymentRestrictions(jobId, callback) {
      let postBody = null;
      // verify the required parameter 'jobId' is set
      if (jobId === undefined || jobId === null) {
        throw new Error("Missing the required parameter 'jobId' when calling getJobDeploymentRestrictions");
      }

      let pathParams = {
        'jobId': jobId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth', 'bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = JobDeploymentRestrictionResponseList;
      return this.apiClient.callApi(
        '/job/{jobId}/deploymentRestriction', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
