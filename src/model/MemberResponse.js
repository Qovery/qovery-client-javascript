/**
 * Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BaseResponse from './BaseResponse';

/**
 * The MemberResponse model module.
 * @module model/MemberResponse
 * @version 1.0.0
 */
class MemberResponse {
    /**
     * Constructs a new <code>MemberResponse</code>.
     * @alias module:model/MemberResponse
     * @implements module:model/BaseResponse
     * @param id {String} 
     * @param createdAt {Date} 
     */
    constructor(id, createdAt) { 
        BaseResponse.initialize(this, id, createdAt);
        MemberResponse.initialize(this, id, createdAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, createdAt) { 
        obj['email'] = email;
        obj['id'] = id;
        obj['created_at'] = createdAt;
    }

    /**
     * Constructs a <code>MemberResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MemberResponse} obj Optional instance to populate.
     * @return {module:model/MemberResponse} The populated <code>MemberResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MemberResponse();
            BaseResponse.constructFromObject(data, obj);

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('nickname')) {
                obj['nickname'] = ApiClient.convertToType(data['nickname'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('profile_picture_url')) {
                obj['profile_picture_url'] = ApiClient.convertToType(data['profile_picture_url'], 'String');
            }
            if (data.hasOwnProperty('last_activity_at')) {
                obj['last_activity_at'] = ApiClient.convertToType(data['last_activity_at'], 'Date');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * @member {String} name
 */
MemberResponse.prototype['name'] = undefined;

/**
 * @member {String} nickname
 */
MemberResponse.prototype['nickname'] = undefined;

/**
 * @member {String} email
 */
MemberResponse.prototype['email'] = undefined;

/**
 * @member {String} profile_picture_url
 */
MemberResponse.prototype['profile_picture_url'] = undefined;

/**
 * last time the user was connected
 * @member {Date} last_activity_at
 */
MemberResponse.prototype['last_activity_at'] = undefined;

/**
 * @member {module:model/MemberResponse.RoleEnum} role
 */
MemberResponse.prototype['role'] = undefined;

/**
 * @member {String} id
 */
MemberResponse.prototype['id'] = undefined;

/**
 * @member {Date} created_at
 */
MemberResponse.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
MemberResponse.prototype['updated_at'] = undefined;


// Implement BaseResponse interface:
/**
 * @member {String} id
 */
BaseResponse.prototype['id'] = undefined;
/**
 * @member {Date} created_at
 */
BaseResponse.prototype['created_at'] = undefined;
/**
 * @member {Date} updated_at
 */
BaseResponse.prototype['updated_at'] = undefined;



/**
 * Allowed values for the <code>role</code> property.
 * @enum {String}
 * @readonly
 */
MemberResponse['RoleEnum'] = {

    /**
     * value: "OWNER"
     * @const
     */
    "OWNER": "OWNER",

    /**
     * value: "ADMIN"
     * @const
     */
    "ADMIN": "ADMIN",

    /**
     * value: "DEVELOPER"
     * @const
     */
    "DEVELOPER": "DEVELOPER",

    /**
     * value: "VIEWER"
     * @const
     */
    "VIEWER": "VIEWER"
};



export default MemberResponse;

