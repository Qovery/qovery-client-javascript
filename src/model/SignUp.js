/**
 * Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Base from './Base';
import CompanySizeEnum from './CompanySizeEnum';
import SignUpRequest from './SignUpRequest';
import TypeOfUseEnum from './TypeOfUseEnum';

/**
 * The SignUp model module.
 * @module model/SignUp
 * @version $(grep &#39;version&#39; _build/openapi.yaml | head -1 | tr &#39;:&#39; &#39;\n&#39; | tail -1 | tr -d &#39; &#39;)
 */
class SignUp {
    /**
     * Constructs a new <code>SignUp</code>.
     * @alias module:model/SignUp
     * @implements module:model/Base
     * @implements module:model/SignUpRequest
     * @param id {String} 
     * @param createdAt {Date} 
     * @param firstName {String} 
     * @param lastName {String} 
     * @param userEmail {String} 
     * @param typeOfUse {module:model/TypeOfUseEnum} 
     * @param qoveryUsage {String} 
     */
    constructor(id, createdAt, firstName, lastName, userEmail, typeOfUse, qoveryUsage) { 
        Base.initialize(this, id, createdAt);SignUpRequest.initialize(this, firstName, lastName, userEmail, typeOfUse, qoveryUsage);
        SignUp.initialize(this, id, createdAt, firstName, lastName, userEmail, typeOfUse, qoveryUsage);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, createdAt, firstName, lastName, userEmail, typeOfUse, qoveryUsage) { 
        obj['id'] = id;
        obj['created_at'] = createdAt;
        obj['first_name'] = firstName;
        obj['last_name'] = lastName;
        obj['user_email'] = userEmail;
        obj['type_of_use'] = typeOfUse;
        obj['qovery_usage'] = qoveryUsage;
    }

    /**
     * Constructs a <code>SignUp</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SignUp} obj Optional instance to populate.
     * @return {module:model/SignUp} The populated <code>SignUp</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SignUp();
            Base.constructFromObject(data, obj);
            SignUpRequest.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('user_email')) {
                obj['user_email'] = ApiClient.convertToType(data['user_email'], 'String');
            }
            if (data.hasOwnProperty('type_of_use')) {
                obj['type_of_use'] = TypeOfUseEnum.constructFromObject(data['type_of_use']);
            }
            if (data.hasOwnProperty('qovery_usage')) {
                obj['qovery_usage'] = ApiClient.convertToType(data['qovery_usage'], 'String');
            }
            if (data.hasOwnProperty('company_name')) {
                obj['company_name'] = ApiClient.convertToType(data['company_name'], 'String');
            }
            if (data.hasOwnProperty('company_size')) {
                obj['company_size'] = CompanySizeEnum.constructFromObject(data['company_size']);
            }
            if (data.hasOwnProperty('user_role')) {
                obj['user_role'] = ApiClient.convertToType(data['user_role'], 'String');
            }
            if (data.hasOwnProperty('qovery_usage_other')) {
                obj['qovery_usage_other'] = ApiClient.convertToType(data['qovery_usage_other'], 'String');
            }
            if (data.hasOwnProperty('user_questions')) {
                obj['user_questions'] = ApiClient.convertToType(data['user_questions'], 'String');
            }
            if (data.hasOwnProperty('current_step')) {
                obj['current_step'] = ApiClient.convertToType(data['current_step'], 'String');
            }
            if (data.hasOwnProperty('dx_auth')) {
                obj['dx_auth'] = ApiClient.convertToType(data['dx_auth'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SignUp</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SignUp</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SignUp.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['last_name'] && !(typeof data['last_name'] === 'string' || data['last_name'] instanceof String)) {
            throw new Error("Expected the field `last_name` to be a primitive type in the JSON string but got " + data['last_name']);
        }
        // ensure the json data is a string
        if (data['user_email'] && !(typeof data['user_email'] === 'string' || data['user_email'] instanceof String)) {
            throw new Error("Expected the field `user_email` to be a primitive type in the JSON string but got " + data['user_email']);
        }
        // ensure the json data is a string
        if (data['qovery_usage'] && !(typeof data['qovery_usage'] === 'string' || data['qovery_usage'] instanceof String)) {
            throw new Error("Expected the field `qovery_usage` to be a primitive type in the JSON string but got " + data['qovery_usage']);
        }
        // ensure the json data is a string
        if (data['company_name'] && !(typeof data['company_name'] === 'string' || data['company_name'] instanceof String)) {
            throw new Error("Expected the field `company_name` to be a primitive type in the JSON string but got " + data['company_name']);
        }
        // ensure the json data is a string
        if (data['user_role'] && !(typeof data['user_role'] === 'string' || data['user_role'] instanceof String)) {
            throw new Error("Expected the field `user_role` to be a primitive type in the JSON string but got " + data['user_role']);
        }
        // ensure the json data is a string
        if (data['qovery_usage_other'] && !(typeof data['qovery_usage_other'] === 'string' || data['qovery_usage_other'] instanceof String)) {
            throw new Error("Expected the field `qovery_usage_other` to be a primitive type in the JSON string but got " + data['qovery_usage_other']);
        }
        // ensure the json data is a string
        if (data['user_questions'] && !(typeof data['user_questions'] === 'string' || data['user_questions'] instanceof String)) {
            throw new Error("Expected the field `user_questions` to be a primitive type in the JSON string but got " + data['user_questions']);
        }
        // ensure the json data is a string
        if (data['current_step'] && !(typeof data['current_step'] === 'string' || data['current_step'] instanceof String)) {
            throw new Error("Expected the field `current_step` to be a primitive type in the JSON string but got " + data['current_step']);
        }

        return true;
    }


}

SignUp.RequiredProperties = ["id", "created_at", "first_name", "last_name", "user_email", "type_of_use", "qovery_usage"];

/**
 * @member {String} id
 */
SignUp.prototype['id'] = undefined;

/**
 * @member {Date} created_at
 */
SignUp.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
SignUp.prototype['updated_at'] = undefined;

/**
 * @member {String} first_name
 */
SignUp.prototype['first_name'] = undefined;

/**
 * @member {String} last_name
 */
SignUp.prototype['last_name'] = undefined;

/**
 * @member {String} user_email
 */
SignUp.prototype['user_email'] = undefined;

/**
 * @member {module:model/TypeOfUseEnum} type_of_use
 */
SignUp.prototype['type_of_use'] = undefined;

/**
 * @member {String} qovery_usage
 */
SignUp.prototype['qovery_usage'] = undefined;

/**
 * @member {String} company_name
 */
SignUp.prototype['company_name'] = undefined;

/**
 * @member {module:model/CompanySizeEnum} company_size
 */
SignUp.prototype['company_size'] = undefined;

/**
 * @member {String} user_role
 */
SignUp.prototype['user_role'] = undefined;

/**
 * @member {String} qovery_usage_other
 */
SignUp.prototype['qovery_usage_other'] = undefined;

/**
 * @member {String} user_questions
 */
SignUp.prototype['user_questions'] = undefined;

/**
 * @member {String} current_step
 */
SignUp.prototype['current_step'] = undefined;

/**
 * @member {Boolean} dx_auth
 */
SignUp.prototype['dx_auth'] = undefined;


// Implement Base interface:
/**
 * @member {String} id
 */
Base.prototype['id'] = undefined;
/**
 * @member {Date} created_at
 */
Base.prototype['created_at'] = undefined;
/**
 * @member {Date} updated_at
 */
Base.prototype['updated_at'] = undefined;
// Implement SignUpRequest interface:
/**
 * @member {String} first_name
 */
SignUpRequest.prototype['first_name'] = undefined;
/**
 * @member {String} last_name
 */
SignUpRequest.prototype['last_name'] = undefined;
/**
 * @member {String} user_email
 */
SignUpRequest.prototype['user_email'] = undefined;
/**
 * @member {module:model/TypeOfUseEnum} type_of_use
 */
SignUpRequest.prototype['type_of_use'] = undefined;
/**
 * @member {String} qovery_usage
 */
SignUpRequest.prototype['qovery_usage'] = undefined;
/**
 * @member {String} company_name
 */
SignUpRequest.prototype['company_name'] = undefined;
/**
 * @member {module:model/CompanySizeEnum} company_size
 */
SignUpRequest.prototype['company_size'] = undefined;
/**
 * @member {String} user_role
 */
SignUpRequest.prototype['user_role'] = undefined;
/**
 * @member {String} qovery_usage_other
 */
SignUpRequest.prototype['qovery_usage_other'] = undefined;
/**
 * @member {String} user_questions
 */
SignUpRequest.prototype['user_questions'] = undefined;
/**
 * @member {String} current_step
 */
SignUpRequest.prototype['current_step'] = undefined;
/**
 * @member {Boolean} dx_auth
 */
SignUpRequest.prototype['dx_auth'] = undefined;




export default SignUp;

