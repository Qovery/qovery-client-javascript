/**
 * Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import APIVariableScopeEnum from './APIVariableScopeEnum';

/**
 * The VariableImportSuccessfulImportedVariablesInner model module.
 * @module model/VariableImportSuccessfulImportedVariablesInner
 * @version $(grep &#39;version&#39; _build/openapi.yaml | head -1 | tr &#39;:&#39; &#39;\n&#39; | tail -1 | tr -d &#39; &#39;)
 */
class VariableImportSuccessfulImportedVariablesInner {
    /**
     * Constructs a new <code>VariableImportSuccessfulImportedVariablesInner</code>.
     * @alias module:model/VariableImportSuccessfulImportedVariablesInner
     * @param name {String} 
     * @param scope {module:model/APIVariableScopeEnum} 
     * @param isSecret {Boolean} 
     */
    constructor(name, scope, isSecret) { 
        
        VariableImportSuccessfulImportedVariablesInner.initialize(this, name, scope, isSecret);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, scope, isSecret) { 
        obj['name'] = name;
        obj['scope'] = scope;
        obj['is_secret'] = isSecret;
    }

    /**
     * Constructs a <code>VariableImportSuccessfulImportedVariablesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VariableImportSuccessfulImportedVariablesInner} obj Optional instance to populate.
     * @return {module:model/VariableImportSuccessfulImportedVariablesInner} The populated <code>VariableImportSuccessfulImportedVariablesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VariableImportSuccessfulImportedVariablesInner();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = APIVariableScopeEnum.constructFromObject(data['scope']);
            }
            if (data.hasOwnProperty('is_secret')) {
                obj['is_secret'] = ApiClient.convertToType(data['is_secret'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VariableImportSuccessfulImportedVariablesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VariableImportSuccessfulImportedVariablesInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VariableImportSuccessfulImportedVariablesInner.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}

VariableImportSuccessfulImportedVariablesInner.RequiredProperties = ["name", "scope", "is_secret"];

/**
 * @member {String} name
 */
VariableImportSuccessfulImportedVariablesInner.prototype['name'] = undefined;

/**
 * Optional if the variable is secret
 * @member {String} value
 */
VariableImportSuccessfulImportedVariablesInner.prototype['value'] = undefined;

/**
 * @member {module:model/APIVariableScopeEnum} scope
 */
VariableImportSuccessfulImportedVariablesInner.prototype['scope'] = undefined;

/**
 * @member {Boolean} is_secret
 */
VariableImportSuccessfulImportedVariablesInner.prototype['is_secret'] = undefined;






export default VariableImportSuccessfulImportedVariablesInner;

