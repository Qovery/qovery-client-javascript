/**
 * Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class BuildPackLanguageEnum.
* @enum {}
* @readonly
*/
export default class BuildPackLanguageEnum {
    
        /**
         * value: "CLOJURE"
         * @const
         */
        "CLOJURE" = "CLOJURE";

    
        /**
         * value: "GO"
         * @const
         */
        "GO" = "GO";

    
        /**
         * value: "GRADLE"
         * @const
         */
        "GRADLE" = "GRADLE";

    
        /**
         * value: "GRAILS"
         * @const
         */
        "GRAILS" = "GRAILS";

    
        /**
         * value: "JAVA"
         * @const
         */
        "JAVA" = "JAVA";

    
        /**
         * value: "JVM"
         * @const
         */
        "JVM" = "JVM";

    
        /**
         * value: "NODE_JS"
         * @const
         */
        "NODE_JS" = "NODE_JS";

    
        /**
         * value: "PHP"
         * @const
         */
        "PHP" = "PHP";

    
        /**
         * value: "PLAY"
         * @const
         */
        "PLAY" = "PLAY";

    
        /**
         * value: "PYTHON"
         * @const
         */
        "PYTHON" = "PYTHON";

    
        /**
         * value: "SCALA"
         * @const
         */
        "SCALA" = "SCALA";

    

    /**
    * Returns a <code>BuildPackLanguageEnum</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/BuildPackLanguageEnum} The enum <code>BuildPackLanguageEnum</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

