/**
 * Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VariableImportResponseSuccessfulImportedVariables from './VariableImportResponseSuccessfulImportedVariables';

/**
 * The VariableImportResponse model module.
 * @module model/VariableImportResponse
 * @version 1.0.0
 */
class VariableImportResponse {
    /**
     * Constructs a new <code>VariableImportResponse</code>.
     * @alias module:model/VariableImportResponse
     * @param totalVariablesToImport {Number} 
     * @param successfulImportedVariables {Array.<module:model/VariableImportResponseSuccessfulImportedVariables>} 
     */
    constructor(totalVariablesToImport, successfulImportedVariables) { 
        
        VariableImportResponse.initialize(this, totalVariablesToImport, successfulImportedVariables);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, totalVariablesToImport, successfulImportedVariables) { 
        obj['total_variables_to_import'] = totalVariablesToImport;
        obj['successful_imported_variables'] = successfulImportedVariables;
    }

    /**
     * Constructs a <code>VariableImportResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VariableImportResponse} obj Optional instance to populate.
     * @return {module:model/VariableImportResponse} The populated <code>VariableImportResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VariableImportResponse();

            if (data.hasOwnProperty('total_variables_to_import')) {
                obj['total_variables_to_import'] = ApiClient.convertToType(data['total_variables_to_import'], 'Number');
            }
            if (data.hasOwnProperty('successful_imported_variables')) {
                obj['successful_imported_variables'] = ApiClient.convertToType(data['successful_imported_variables'], [VariableImportResponseSuccessfulImportedVariables]);
            }
        }
        return obj;
    }


}

/**
 * @member {Number} total_variables_to_import
 */
VariableImportResponse.prototype['total_variables_to_import'] = undefined;

/**
 * @member {Array.<module:model/VariableImportResponseSuccessfulImportedVariables>} successful_imported_variables
 */
VariableImportResponse.prototype['successful_imported_variables'] = undefined;






export default VariableImportResponse;

