/**
 * Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ContainerDeploymentRestriction from '../model/ContainerDeploymentRestriction';
import ContainerDeploymentRestrictionRequest from '../model/ContainerDeploymentRestrictionRequest';
import ContainerDeploymentRestrictionResponseList from '../model/ContainerDeploymentRestrictionResponseList';

/**
* ContainerDeploymentRestriction service.
* @module api/ContainerDeploymentRestrictionApi
* @version $(grep 'version' _build/openapi.yaml | head -1 | tr ':' '\n' | tail -1 | tr -d ' ')
*/
export default class ContainerDeploymentRestrictionApi {

    /**
    * Constructs a new ContainerDeploymentRestrictionApi. 
    * @alias module:api/ContainerDeploymentRestrictionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createContainerDeploymentRestriction operation.
     * @callback module:api/ContainerDeploymentRestrictionApi~createContainerDeploymentRestrictionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContainerDeploymentRestriction} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an container deployment restriction
     * Create an container deployment restriction
     * @param {String} containerId Container ID
     * @param {Object} opts Optional parameters
     * @param {module:model/ContainerDeploymentRestrictionRequest} opts.containerDeploymentRestrictionRequest 
     * @param {module:api/ContainerDeploymentRestrictionApi~createContainerDeploymentRestrictionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContainerDeploymentRestriction}
     */
    createContainerDeploymentRestriction(containerId, opts, callback) {
      opts = opts || {};
      let postBody = opts['containerDeploymentRestrictionRequest'];
      // verify the required parameter 'containerId' is set
      if (containerId === undefined || containerId === null) {
        throw new Error("Missing the required parameter 'containerId' when calling createContainerDeploymentRestriction");
      }

      let pathParams = {
        'containerId': containerId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ContainerDeploymentRestriction;
      return this.apiClient.callApi(
        '/container/{containerId}/deploymentRestriction', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteContainerDeploymentRestriction operation.
     * @callback module:api/ContainerDeploymentRestrictionApi~deleteContainerDeploymentRestrictionCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a container deployment restriction
     * Delete a container deployment restriction
     * @param {String} containerId Container ID
     * @param {module:api/ContainerDeploymentRestrictionApi~deleteContainerDeploymentRestrictionCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteContainerDeploymentRestriction(containerId, callback) {
      let postBody = null;
      // verify the required parameter 'containerId' is set
      if (containerId === undefined || containerId === null) {
        throw new Error("Missing the required parameter 'containerId' when calling deleteContainerDeploymentRestriction");
      }

      let pathParams = {
        'containerId': containerId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/container/{containerId}/deploymentRestriction/{deploymentRestrictionId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the editContainerDeploymentRestriction operation.
     * @callback module:api/ContainerDeploymentRestrictionApi~editContainerDeploymentRestrictionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContainerDeploymentRestriction} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit a container deployment restriction
     * Edit a container deployment restriction
     * @param {String} containerId Container ID
     * @param {String} deploymentRestrictionId Deployment Restriction ID
     * @param {Object} opts Optional parameters
     * @param {module:model/ContainerDeploymentRestrictionRequest} opts.containerDeploymentRestrictionRequest 
     * @param {module:api/ContainerDeploymentRestrictionApi~editContainerDeploymentRestrictionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContainerDeploymentRestriction}
     */
    editContainerDeploymentRestriction(containerId, deploymentRestrictionId, opts, callback) {
      opts = opts || {};
      let postBody = opts['containerDeploymentRestrictionRequest'];
      // verify the required parameter 'containerId' is set
      if (containerId === undefined || containerId === null) {
        throw new Error("Missing the required parameter 'containerId' when calling editContainerDeploymentRestriction");
      }
      // verify the required parameter 'deploymentRestrictionId' is set
      if (deploymentRestrictionId === undefined || deploymentRestrictionId === null) {
        throw new Error("Missing the required parameter 'deploymentRestrictionId' when calling editContainerDeploymentRestriction");
      }

      let pathParams = {
        'containerId': containerId,
        'deploymentRestrictionId': deploymentRestrictionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ContainerDeploymentRestriction;
      return this.apiClient.callApi(
        '/container/{containerId}/deploymentRestriction/{deploymentRestrictionId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getContainerDeploymentRestrictions operation.
     * @callback module:api/ContainerDeploymentRestrictionApi~getContainerDeploymentRestrictionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContainerDeploymentRestrictionResponseList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get container deployment restrictions
     * Get container deployment restrictions
     * @param {String} containerId Container ID
     * @param {module:api/ContainerDeploymentRestrictionApi~getContainerDeploymentRestrictionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContainerDeploymentRestrictionResponseList}
     */
    getContainerDeploymentRestrictions(containerId, callback) {
      let postBody = null;
      // verify the required parameter 'containerId' is set
      if (containerId === undefined || containerId === null) {
        throw new Error("Missing the required parameter 'containerId' when calling getContainerDeploymentRestrictions");
      }

      let pathParams = {
        'containerId': containerId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContainerDeploymentRestrictionResponseList;
      return this.apiClient.callApi(
        '/container/{containerId}/deploymentRestriction', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
