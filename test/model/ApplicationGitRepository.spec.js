/**
 * Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.QoveryApi);
  }
}(this, function(expect, QoveryApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new QoveryApi.ApplicationGitRepository();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApplicationGitRepository', function() {
    it('should create an instance of ApplicationGitRepository', function() {
      // uncomment below and update the code to test ApplicationGitRepository
      //var instance = new QoveryApi.ApplicationGitRepository();
      //expect(instance).to.be.a(QoveryApi.ApplicationGitRepository);
    });

    it('should have the property hasAccess (base name: "has_access")', function() {
      // uncomment below and update the code to test the property hasAccess
      //var instance = new QoveryApi.ApplicationGitRepository();
      //expect(instance).to.be();
    });

    it('should have the property provider (base name: "provider")', function() {
      // uncomment below and update the code to test the property provider
      //var instance = new QoveryApi.ApplicationGitRepository();
      //expect(instance).to.be();
    });

    it('should have the property owner (base name: "owner")', function() {
      // uncomment below and update the code to test the property owner
      //var instance = new QoveryApi.ApplicationGitRepository();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new QoveryApi.ApplicationGitRepository();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new QoveryApi.ApplicationGitRepository();
      //expect(instance).to.be();
    });

    it('should have the property branch (base name: "branch")', function() {
      // uncomment below and update the code to test the property branch
      //var instance = new QoveryApi.ApplicationGitRepository();
      //expect(instance).to.be();
    });

    it('should have the property rootPath (base name: "root_path")', function() {
      // uncomment below and update the code to test the property rootPath
      //var instance = new QoveryApi.ApplicationGitRepository();
      //expect(instance).to.be();
    });

    it('should have the property deployedCommitId (base name: "deployed_commit_id")', function() {
      // uncomment below and update the code to test the property deployedCommitId
      //var instance = new QoveryApi.ApplicationGitRepository();
      //expect(instance).to.be();
    });

    it('should have the property deployedCommitDate (base name: "deployed_commit_date")', function() {
      // uncomment below and update the code to test the property deployedCommitDate
      //var instance = new QoveryApi.ApplicationGitRepository();
      //expect(instance).to.be();
    });

    it('should have the property deployedCommitContributor (base name: "deployed_commit_contributor")', function() {
      // uncomment below and update the code to test the property deployedCommitContributor
      //var instance = new QoveryApi.ApplicationGitRepository();
      //expect(instance).to.be();
    });

    it('should have the property deployedCommitTag (base name: "deployed_commit_tag")', function() {
      // uncomment below and update the code to test the property deployedCommitTag
      //var instance = new QoveryApi.ApplicationGitRepository();
      //expect(instance).to.be();
    });

    it('should have the property gitTokenId (base name: "git_token_id")', function() {
      // uncomment below and update the code to test the property gitTokenId
      //var instance = new QoveryApi.ApplicationGitRepository();
      //expect(instance).to.be();
    });

    it('should have the property gitTokenName (base name: "git_token_name")', function() {
      // uncomment below and update the code to test the property gitTokenName
      //var instance = new QoveryApi.ApplicationGitRepository();
      //expect(instance).to.be();
    });

  });

}));
