/**
 * Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClusterFeatureAcceptedValuesInner from './ClusterFeatureAcceptedValuesInner';
import ClusterFeatureValue from './ClusterFeatureValue';

/**
 * The ClusterFeature model module.
 * @module model/ClusterFeature
 * @version $(grep &#39;version&#39; _build/openapi.yaml | head -1 | tr &#39;:&#39; &#39;\n&#39; | tail -1 | tr -d &#39; &#39;)
 */
class ClusterFeature {
    /**
     * Constructs a new <code>ClusterFeature</code>.
     * @alias module:model/ClusterFeature
     */
    constructor() { 
        
        ClusterFeature.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClusterFeature</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClusterFeature} obj Optional instance to populate.
     * @return {module:model/ClusterFeature} The populated <code>ClusterFeature</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusterFeature();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('cost_per_month_in_cents')) {
                obj['cost_per_month_in_cents'] = ApiClient.convertToType(data['cost_per_month_in_cents'], 'Number');
            }
            if (data.hasOwnProperty('cost_per_month')) {
                obj['cost_per_month'] = ApiClient.convertToType(data['cost_per_month'], 'Number');
            }
            if (data.hasOwnProperty('currency_code')) {
                obj['currency_code'] = ApiClient.convertToType(data['currency_code'], 'String');
            }
            if (data.hasOwnProperty('value_type')) {
                obj['value_type'] = ApiClient.convertToType(data['value_type'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ClusterFeatureValue.constructFromObject(data['value']);
            }
            if (data.hasOwnProperty('is_value_updatable')) {
                obj['is_value_updatable'] = ApiClient.convertToType(data['is_value_updatable'], 'Boolean');
            }
            if (data.hasOwnProperty('accepted_values')) {
                obj['accepted_values'] = ApiClient.convertToType(data['accepted_values'], [ClusterFeatureAcceptedValuesInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClusterFeature</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClusterFeature</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['currency_code'] && !(typeof data['currency_code'] === 'string' || data['currency_code'] instanceof String)) {
            throw new Error("Expected the field `currency_code` to be a primitive type in the JSON string but got " + data['currency_code']);
        }
        // ensure the json data is a string
        if (data['value_type'] && !(typeof data['value_type'] === 'string' || data['value_type'] instanceof String)) {
            throw new Error("Expected the field `value_type` to be a primitive type in the JSON string but got " + data['value_type']);
        }
        // validate the optional field `value`
        if (data['value']) { // data not null
          ClusterFeatureValue.validateJSON(data['value']);
        }
        if (data['accepted_values']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['accepted_values'])) {
                throw new Error("Expected the field `accepted_values` to be an array in the JSON data but got " + data['accepted_values']);
            }
            // validate the optional field `accepted_values` (array)
            for (const item of data['accepted_values']) {
                ClusterFeatureAcceptedValuesInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} id
 */
ClusterFeature.prototype['id'] = undefined;

/**
 * @member {String} title
 */
ClusterFeature.prototype['title'] = undefined;

/**
 * @member {String} description
 */
ClusterFeature.prototype['description'] = undefined;

/**
 * @member {Number} cost_per_month_in_cents
 */
ClusterFeature.prototype['cost_per_month_in_cents'] = undefined;

/**
 * @member {Number} cost_per_month
 */
ClusterFeature.prototype['cost_per_month'] = undefined;

/**
 * @member {String} currency_code
 */
ClusterFeature.prototype['currency_code'] = undefined;

/**
 * @member {module:model/ClusterFeature.ValueTypeEnum} value_type
 */
ClusterFeature.prototype['value_type'] = undefined;

/**
 * @member {module:model/ClusterFeatureValue} value
 */
ClusterFeature.prototype['value'] = undefined;

/**
 * @member {Boolean} is_value_updatable
 * @default false
 */
ClusterFeature.prototype['is_value_updatable'] = false;

/**
 * @member {Array.<module:model/ClusterFeatureAcceptedValuesInner>} accepted_values
 */
ClusterFeature.prototype['accepted_values'] = undefined;





/**
 * Allowed values for the <code>value_type</code> property.
 * @enum {String}
 * @readonly
 */
ClusterFeature['ValueTypeEnum'] = {

    /**
     * value: "BOOLEAN"
     * @const
     */
    "BOOLEAN": "BOOLEAN"
};



export default ClusterFeature;

