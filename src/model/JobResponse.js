/**
 * Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BaseJobResponseAllOfSource from './BaseJobResponseAllOfSource';
import CronJobResponse from './CronJobResponse';
import CronJobResponseAllOfSchedule from './CronJobResponseAllOfSchedule';
import Healthcheck from './Healthcheck';
import LifecycleJobResponse from './LifecycleJobResponse';
import ReferenceObject from './ReferenceObject';

/**
 * The JobResponse model module.
 * @module model/JobResponse
 * @version $(grep &#39;version&#39; _build/openapi.yaml | head -1 | tr &#39;:&#39; &#39;\n&#39; | tail -1 | tr -d &#39; &#39;)
 */
class JobResponse {
    /**
     * Constructs a new <code>JobResponse</code>.
     * @alias module:model/JobResponse
     * @param {(module:model/CronJobResponse|module:model/LifecycleJobResponse)} instance The actual instance to initialize JobResponse.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "LifecycleJobResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                LifecycleJobResponse.validateJSON(instance); // throw an exception if no match
                // create LifecycleJobResponse from JS object
                this.actualInstance = LifecycleJobResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into LifecycleJobResponse
            errorMessages.push("Failed to construct LifecycleJobResponse: " + err)
        }

        try {
            if (typeof instance === "CronJobResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CronJobResponse.validateJSON(instance); // throw an exception if no match
                // create CronJobResponse from JS object
                this.actualInstance = CronJobResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CronJobResponse
            errorMessages.push("Failed to construct CronJobResponse: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `JobResponse` with oneOf schemas CronJobResponse, LifecycleJobResponse. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `JobResponse` with oneOf schemas CronJobResponse, LifecycleJobResponse. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>JobResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobResponse} obj Optional instance to populate.
     * @return {module:model/JobResponse} The populated <code>JobResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        return new JobResponse(data);
    }

    /**
     * Gets the actual instance, which can be <code>CronJobResponse</code>, <code>LifecycleJobResponse</code>.
     * @return {(module:model/CronJobResponse|module:model/LifecycleJobResponse)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CronJobResponse</code>, <code>LifecycleJobResponse</code>.
     * @param {(module:model/CronJobResponse|module:model/LifecycleJobResponse)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = JobResponse.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of JobResponse from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/JobResponse} An instance of JobResponse.
     */
    static fromJSON = function(json_string){
        return JobResponse.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {String} id
 */
JobResponse.prototype['id'] = undefined;

/**
 * @member {Date} created_at
 */
JobResponse.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
JobResponse.prototype['updated_at'] = undefined;

/**
 * @member {module:model/ReferenceObject} environment
 */
JobResponse.prototype['environment'] = undefined;

/**
 * Maximum cpu that can be allocated to the job based on organization cluster configuration. unit is millicores (m). 1000m = 1 cpu
 * @member {Number} maximum_cpu
 */
JobResponse.prototype['maximum_cpu'] = undefined;

/**
 * Maximum memory that can be allocated to the job based on organization cluster configuration. unit is MB. 1024 MB = 1GB
 * @member {Number} maximum_memory
 */
JobResponse.prototype['maximum_memory'] = undefined;

/**
 * name is case insensitive
 * @member {String} name
 */
JobResponse.prototype['name'] = undefined;

/**
 * @member {String} description
 */
JobResponse.prototype['description'] = undefined;

/**
 * unit is millicores (m). 1000m = 1 cpu
 * @member {Number} cpu
 */
JobResponse.prototype['cpu'] = undefined;

/**
 * unit is MB. 1024 MB = 1GB
 * @member {Number} memory
 */
JobResponse.prototype['memory'] = undefined;

/**
 * Maximum number of restart allowed before the job is considered as failed 0 means that no restart/crash of the job is allowed 
 * @member {Number} max_nb_restart
 */
JobResponse.prototype['max_nb_restart'] = undefined;

/**
 * Maximum number of seconds allowed for the job to run before killing it and mark it as failed 
 * @member {Number} max_duration_seconds
 */
JobResponse.prototype['max_duration_seconds'] = undefined;

/**
 * Indicates if the 'environment preview option' is enabled for this container.   If enabled, a preview environment will be automatically cloned when `/preview` endpoint is called.   If not specified, it takes the value of the `auto_preview` property from the associated environment. 
 * @member {Boolean} auto_preview
 */
JobResponse.prototype['auto_preview'] = undefined;

/**
 * Port where to run readiness and liveliness probes checks. The port will not be exposed externally
 * @member {Number} port
 */
JobResponse.prototype['port'] = undefined;

/**
 * @member {module:model/BaseJobResponseAllOfSource} source
 */
JobResponse.prototype['source'] = undefined;

/**
 * @member {module:model/Healthcheck} healthchecks
 */
JobResponse.prototype['healthchecks'] = undefined;

/**
 * Specify if the job will be automatically updated after receiving a new image tag or a new commit according to the source type.  The new image tag shall be communicated via the \"Auto Deploy job\" endpoint https://api-doc.qovery.com/#tag/Jobs/operation/autoDeployJobEnvironments 
 * @member {Boolean} auto_deploy
 */
JobResponse.prototype['auto_deploy'] = undefined;

/**
 * @member {module:model/JobResponse.JobTypeEnum} job_type
 */
JobResponse.prototype['job_type'] = undefined;

/**
 * @member {module:model/CronJobResponseAllOfSchedule} schedule
 */
JobResponse.prototype['schedule'] = undefined;


JobResponse.OneOf = ["CronJobResponse", "LifecycleJobResponse"];

export default JobResponse;

