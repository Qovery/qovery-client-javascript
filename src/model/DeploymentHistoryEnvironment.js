/**
 * Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Base from './Base';
import DeploymentHistoryApplication from './DeploymentHistoryApplication';
import DeploymentHistoryContainer from './DeploymentHistoryContainer';
import DeploymentHistoryDatabase from './DeploymentHistoryDatabase';
import DeploymentHistoryHelmResponse from './DeploymentHistoryHelmResponse';
import DeploymentHistoryJobResponse from './DeploymentHistoryJobResponse';
import OrganizationEventOrigin from './OrganizationEventOrigin';
import StateEnum from './StateEnum';

/**
 * The DeploymentHistoryEnvironment model module.
 * @module model/DeploymentHistoryEnvironment
 * @version $(grep &#39;version&#39; _build/openapi.yaml | head -1 | tr &#39;:&#39; &#39;\n&#39; | tail -1 | tr -d &#39; &#39;)
 */
class DeploymentHistoryEnvironment {
    /**
     * Constructs a new <code>DeploymentHistoryEnvironment</code>.
     * @alias module:model/DeploymentHistoryEnvironment
     * @implements module:model/Base
     * @param id {String} 
     * @param createdAt {Date} 
     */
    constructor(id, createdAt) { 
        Base.initialize(this, id, createdAt);
        DeploymentHistoryEnvironment.initialize(this, id, createdAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, createdAt) { 
        obj['id'] = id;
        obj['created_at'] = createdAt;
    }

    /**
     * Constructs a <code>DeploymentHistoryEnvironment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeploymentHistoryEnvironment} obj Optional instance to populate.
     * @return {module:model/DeploymentHistoryEnvironment} The populated <code>DeploymentHistoryEnvironment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeploymentHistoryEnvironment();
            Base.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = StateEnum.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('origin')) {
                obj['origin'] = OrganizationEventOrigin.constructFromObject(data['origin']);
            }
            if (data.hasOwnProperty('triggered_by')) {
                obj['triggered_by'] = ApiClient.convertToType(data['triggered_by'], 'String');
            }
            if (data.hasOwnProperty('applications')) {
                obj['applications'] = ApiClient.convertToType(data['applications'], [DeploymentHistoryApplication]);
            }
            if (data.hasOwnProperty('containers')) {
                obj['containers'] = ApiClient.convertToType(data['containers'], [DeploymentHistoryContainer]);
            }
            if (data.hasOwnProperty('databases')) {
                obj['databases'] = ApiClient.convertToType(data['databases'], [DeploymentHistoryDatabase]);
            }
            if (data.hasOwnProperty('jobs')) {
                obj['jobs'] = ApiClient.convertToType(data['jobs'], [DeploymentHistoryJobResponse]);
            }
            if (data.hasOwnProperty('helms')) {
                obj['helms'] = ApiClient.convertToType(data['helms'], [DeploymentHistoryHelmResponse]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeploymentHistoryEnvironment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeploymentHistoryEnvironment</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeploymentHistoryEnvironment.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['triggered_by'] && !(typeof data['triggered_by'] === 'string' || data['triggered_by'] instanceof String)) {
            throw new Error("Expected the field `triggered_by` to be a primitive type in the JSON string but got " + data['triggered_by']);
        }
        if (data['applications']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['applications'])) {
                throw new Error("Expected the field `applications` to be an array in the JSON data but got " + data['applications']);
            }
            // validate the optional field `applications` (array)
            for (const item of data['applications']) {
                DeploymentHistoryApplication.validateJSON(item);
            };
        }
        if (data['containers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['containers'])) {
                throw new Error("Expected the field `containers` to be an array in the JSON data but got " + data['containers']);
            }
            // validate the optional field `containers` (array)
            for (const item of data['containers']) {
                DeploymentHistoryContainer.validateJSON(item);
            };
        }
        if (data['databases']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['databases'])) {
                throw new Error("Expected the field `databases` to be an array in the JSON data but got " + data['databases']);
            }
            // validate the optional field `databases` (array)
            for (const item of data['databases']) {
                DeploymentHistoryDatabase.validateJSON(item);
            };
        }
        if (data['jobs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['jobs'])) {
                throw new Error("Expected the field `jobs` to be an array in the JSON data but got " + data['jobs']);
            }
            // validate the optional field `jobs` (array)
            for (const item of data['jobs']) {
                DeploymentHistoryJobResponse.validateJSON(item);
            };
        }
        if (data['helms']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['helms'])) {
                throw new Error("Expected the field `helms` to be an array in the JSON data but got " + data['helms']);
            }
            // validate the optional field `helms` (array)
            for (const item of data['helms']) {
                DeploymentHistoryHelmResponse.validateJSON(item);
            };
        }

        return true;
    }


}

DeploymentHistoryEnvironment.RequiredProperties = ["id", "created_at"];

/**
 * @member {String} id
 */
DeploymentHistoryEnvironment.prototype['id'] = undefined;

/**
 * @member {Date} created_at
 */
DeploymentHistoryEnvironment.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
DeploymentHistoryEnvironment.prototype['updated_at'] = undefined;

/**
 * @member {module:model/StateEnum} status
 */
DeploymentHistoryEnvironment.prototype['status'] = undefined;

/**
 * @member {module:model/OrganizationEventOrigin} origin
 */
DeploymentHistoryEnvironment.prototype['origin'] = undefined;

/**
 * @member {String} triggered_by
 */
DeploymentHistoryEnvironment.prototype['triggered_by'] = undefined;

/**
 * @member {Array.<module:model/DeploymentHistoryApplication>} applications
 */
DeploymentHistoryEnvironment.prototype['applications'] = undefined;

/**
 * @member {Array.<module:model/DeploymentHistoryContainer>} containers
 */
DeploymentHistoryEnvironment.prototype['containers'] = undefined;

/**
 * @member {Array.<module:model/DeploymentHistoryDatabase>} databases
 */
DeploymentHistoryEnvironment.prototype['databases'] = undefined;

/**
 * @member {Array.<module:model/DeploymentHistoryJobResponse>} jobs
 */
DeploymentHistoryEnvironment.prototype['jobs'] = undefined;

/**
 * @member {Array.<module:model/DeploymentHistoryHelmResponse>} helms
 */
DeploymentHistoryEnvironment.prototype['helms'] = undefined;


// Implement Base interface:
/**
 * @member {String} id
 */
Base.prototype['id'] = undefined;
/**
 * @member {Date} created_at
 */
Base.prototype['created_at'] = undefined;
/**
 * @member {Date} updated_at
 */
Base.prototype['updated_at'] = undefined;




export default DeploymentHistoryEnvironment;

