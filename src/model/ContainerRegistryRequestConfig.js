/**
 * Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContainerRegistryRequestConfig model module.
 * @module model/ContainerRegistryRequestConfig
 * @version $(grep &#39;version&#39; _build/openapi.yaml | head -1 | tr &#39;:&#39; &#39;\n&#39; | tail -1 | tr -d &#39; &#39;)
 */
class ContainerRegistryRequestConfig {
    /**
     * Constructs a new <code>ContainerRegistryRequestConfig</code>.
     * This field is dependent of the container registry kind: * &#x60;ECR&#x60; needs in the config: region, access_key_id, secret_access_key * &#x60;SCALEWAY_CR&#x60; needs in the config: region, scaleway_access_key, scaleway_secret_key * &#x60;DOCKER_HUB&#x60; needs in the config (optional): username, password * &#x60;GITHUB_CR&#x60; needs in the config (optional): username, password * &#x60;GITLAB_CR&#x60; needs in the config (optional): username, password * &#x60;PUBLIC_ECR&#x60; doesn&#39;t need credentials info * &#x60;GENERIC_CR&#x60; needs in the config (optional): username, password * &#x60;DOCR&#x60; is not supported anymore 
     * @alias module:model/ContainerRegistryRequestConfig
     */
    constructor() { 
        
        ContainerRegistryRequestConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContainerRegistryRequestConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContainerRegistryRequestConfig} obj Optional instance to populate.
     * @return {module:model/ContainerRegistryRequestConfig} The populated <code>ContainerRegistryRequestConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContainerRegistryRequestConfig();

            if (data.hasOwnProperty('access_key_id')) {
                obj['access_key_id'] = ApiClient.convertToType(data['access_key_id'], 'String');
            }
            if (data.hasOwnProperty('secret_access_key')) {
                obj['secret_access_key'] = ApiClient.convertToType(data['secret_access_key'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('scaleway_access_key')) {
                obj['scaleway_access_key'] = ApiClient.convertToType(data['scaleway_access_key'], 'String');
            }
            if (data.hasOwnProperty('scaleway_secret_key')) {
                obj['scaleway_secret_key'] = ApiClient.convertToType(data['scaleway_secret_key'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContainerRegistryRequestConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContainerRegistryRequestConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['access_key_id'] && !(typeof data['access_key_id'] === 'string' || data['access_key_id'] instanceof String)) {
            throw new Error("Expected the field `access_key_id` to be a primitive type in the JSON string but got " + data['access_key_id']);
        }
        // ensure the json data is a string
        if (data['secret_access_key'] && !(typeof data['secret_access_key'] === 'string' || data['secret_access_key'] instanceof String)) {
            throw new Error("Expected the field `secret_access_key` to be a primitive type in the JSON string but got " + data['secret_access_key']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }
        // ensure the json data is a string
        if (data['scaleway_access_key'] && !(typeof data['scaleway_access_key'] === 'string' || data['scaleway_access_key'] instanceof String)) {
            throw new Error("Expected the field `scaleway_access_key` to be a primitive type in the JSON string but got " + data['scaleway_access_key']);
        }
        // ensure the json data is a string
        if (data['scaleway_secret_key'] && !(typeof data['scaleway_secret_key'] === 'string' || data['scaleway_secret_key'] instanceof String)) {
            throw new Error("Expected the field `scaleway_secret_key` to be a primitive type in the JSON string but got " + data['scaleway_secret_key']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }

        return true;
    }


}



/**
 * Required if kind is `ECR` or `PUBLIC_ECR`
 * @member {String} access_key_id
 */
ContainerRegistryRequestConfig.prototype['access_key_id'] = undefined;

/**
 * Required if kind is `ECR` or `PUBLIC_ECR`
 * @member {String} secret_access_key
 */
ContainerRegistryRequestConfig.prototype['secret_access_key'] = undefined;

/**
 * Required if kind is `ECR` or `SCALEWAY_CR`
 * @member {String} region
 */
ContainerRegistryRequestConfig.prototype['region'] = undefined;

/**
 * Required if kind is `SCALEWAY_CR`
 * @member {String} scaleway_access_key
 */
ContainerRegistryRequestConfig.prototype['scaleway_access_key'] = undefined;

/**
 * Required if kind is `SCALEWAY_CR`
 * @member {String} scaleway_secret_key
 */
ContainerRegistryRequestConfig.prototype['scaleway_secret_key'] = undefined;

/**
 * optional, for kind `DOCKER_HUB`   We encourage you to set credentials for Docker Hub due to the limits on the pull rate 
 * @member {String} username
 */
ContainerRegistryRequestConfig.prototype['username'] = undefined;

/**
 * optional, for kind `DOCKER_HUB`   We encourage you to set credentials for Docker Hub due to the limits on the pull rate 
 * @member {String} password
 */
ContainerRegistryRequestConfig.prototype['password'] = undefined;






export default ContainerRegistryRequestConfig;

