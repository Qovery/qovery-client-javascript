/**
 * Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnvironmentLogsErrorUnderlyingError from './EnvironmentLogsErrorUnderlyingError';

/**
 * The EnvironmentLogsError model module.
 * @module model/EnvironmentLogsError
 * @version $(grep &#39;version&#39; _build/openapi.yaml | head -1 | tr &#39;:&#39; &#39;\n&#39; | tail -1 | tr -d &#39; &#39;)
 */
class EnvironmentLogsError {
    /**
     * Constructs a new <code>EnvironmentLogsError</code>.
     * @alias module:model/EnvironmentLogsError
     */
    constructor() { 
        
        EnvironmentLogsError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnvironmentLogsError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnvironmentLogsError} obj Optional instance to populate.
     * @return {module:model/EnvironmentLogsError} The populated <code>EnvironmentLogsError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnvironmentLogsError();

            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
            if (data.hasOwnProperty('user_log_message')) {
                obj['user_log_message'] = ApiClient.convertToType(data['user_log_message'], 'String');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('hint_message')) {
                obj['hint_message'] = ApiClient.convertToType(data['hint_message'], 'String');
            }
            if (data.hasOwnProperty('underlying_error')) {
                obj['underlying_error'] = EnvironmentLogsErrorUnderlyingError.constructFromObject(data['underlying_error']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnvironmentLogsError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnvironmentLogsError</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['tag'] && !(typeof data['tag'] === 'string' || data['tag'] instanceof String)) {
            throw new Error("Expected the field `tag` to be a primitive type in the JSON string but got " + data['tag']);
        }
        // ensure the json data is a string
        if (data['user_log_message'] && !(typeof data['user_log_message'] === 'string' || data['user_log_message'] instanceof String)) {
            throw new Error("Expected the field `user_log_message` to be a primitive type in the JSON string but got " + data['user_log_message']);
        }
        // ensure the json data is a string
        if (data['link'] && !(typeof data['link'] === 'string' || data['link'] instanceof String)) {
            throw new Error("Expected the field `link` to be a primitive type in the JSON string but got " + data['link']);
        }
        // ensure the json data is a string
        if (data['hint_message'] && !(typeof data['hint_message'] === 'string' || data['hint_message'] instanceof String)) {
            throw new Error("Expected the field `hint_message` to be a primitive type in the JSON string but got " + data['hint_message']);
        }
        // validate the optional field `underlying_error`
        if (data['underlying_error']) { // data not null
          EnvironmentLogsErrorUnderlyingError.validateJSON(data['underlying_error']);
        }

        return true;
    }


}



/**
 * @member {String} tag
 */
EnvironmentLogsError.prototype['tag'] = undefined;

/**
 * @member {String} user_log_message
 */
EnvironmentLogsError.prototype['user_log_message'] = undefined;

/**
 * @member {String} link
 */
EnvironmentLogsError.prototype['link'] = undefined;

/**
 * @member {String} hint_message
 */
EnvironmentLogsError.prototype['hint_message'] = undefined;

/**
 * @member {module:model/EnvironmentLogsErrorUnderlyingError} underlying_error
 */
EnvironmentLogsError.prototype['underlying_error'] = undefined;






export default EnvironmentLogsError;

