/**
 * Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.QoveryApi);
  }
}(this, function(expect, QoveryApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new QoveryApi.ClusterAdvancedSettings();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ClusterAdvancedSettings', function() {
    it('should create an instance of ClusterAdvancedSettings', function() {
      // uncomment below and update the code to test ClusterAdvancedSettings
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be.a(QoveryApi.ClusterAdvancedSettings);
    });

    it('should have the property awsCloudwatchEksLogsRetentionDays (base name: "aws.cloudwatch.eks_logs_retention_days")', function() {
      // uncomment below and update the code to test the property awsCloudwatchEksLogsRetentionDays
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property awsVpcEnableS3FlowLogs (base name: "aws.vpc.enable_s3_flow_logs")', function() {
      // uncomment below and update the code to test the property awsVpcEnableS3FlowLogs
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property awsVpcFlowLogsRetentionDays (base name: "aws.vpc.flow_logs_retention_days")', function() {
      // uncomment below and update the code to test the property awsVpcFlowLogsRetentionDays
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property lokiLogRetentionInWeek (base name: "loki.log_retention_in_week")', function() {
      // uncomment below and update the code to test the property lokiLogRetentionInWeek
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property registryImageRetentionTime (base name: "registry.image_retention_time")', function() {
      // uncomment below and update the code to test the property registryImageRetentionTime
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property cloudProviderContainerRegistryTags (base name: "cloud_provider.container_registry.tags")', function() {
      // uncomment below and update the code to test the property cloudProviderContainerRegistryTags
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property loadBalancerSize (base name: "load_balancer.size")', function() {
      // uncomment below and update the code to test the property loadBalancerSize
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property databasePostgresqlDenyPublicAccess (base name: "database.postgresql.deny_public_access")', function() {
      // uncomment below and update the code to test the property databasePostgresqlDenyPublicAccess
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property databasePostgresqlAllowedCidrs (base name: "database.postgresql.allowed_cidrs")', function() {
      // uncomment below and update the code to test the property databasePostgresqlAllowedCidrs
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property databaseMysqlDenyPublicAccess (base name: "database.mysql.deny_public_access")', function() {
      // uncomment below and update the code to test the property databaseMysqlDenyPublicAccess
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property databaseMysqlAllowedCidrs (base name: "database.mysql.allowed_cidrs")', function() {
      // uncomment below and update the code to test the property databaseMysqlAllowedCidrs
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property databaseMongodbDenyPublicAccess (base name: "database.mongodb.deny_public_access")', function() {
      // uncomment below and update the code to test the property databaseMongodbDenyPublicAccess
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property databaseMongodbAllowedCidrs (base name: "database.mongodb.allowed_cidrs")', function() {
      // uncomment below and update the code to test the property databaseMongodbAllowedCidrs
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property databaseRedisDenyPublicAccess (base name: "database.redis.deny_public_access")', function() {
      // uncomment below and update the code to test the property databaseRedisDenyPublicAccess
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property databaseRedisAllowedCidrs (base name: "database.redis.allowed_cidrs")', function() {
      // uncomment below and update the code to test the property databaseRedisAllowedCidrs
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property awsIamAdminGroup (base name: "aws.iam.admin_group")', function() {
      // uncomment below and update the code to test the property awsIamAdminGroup
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property awsEksEc2MetadataImds (base name: "aws.eks.ec2.metadata_imds")', function() {
      // uncomment below and update the code to test the property awsEksEc2MetadataImds
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property plecoResourcesTtl (base name: "pleco.resources_ttl")', function() {
      // uncomment below and update the code to test the property plecoResourcesTtl
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property registryMirroringMode (base name: "registry.mirroring_mode")', function() {
      // uncomment below and update the code to test the property registryMirroringMode
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property nginxVcpuRequestInMilli (base name: "nginx.vcpu.request_in_milli")', function() {
      // uncomment below and update the code to test the property nginxVcpuRequestInMilli
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property nginxVcpuLimitInMilli (base name: "nginx.vcpu.limit_in_milli")', function() {
      // uncomment below and update the code to test the property nginxVcpuLimitInMilli
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property nginxMemoryRequestInMib (base name: "nginx.memory.request_in_mib")', function() {
      // uncomment below and update the code to test the property nginxMemoryRequestInMib
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property nginxMemoryLimitInMib (base name: "nginx.memory.limit_in_mib")', function() {
      // uncomment below and update the code to test the property nginxMemoryLimitInMib
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property nginxHpaCpuUtilizationPercentageThreshold (base name: "nginx.hpa.cpu_utilization_percentage_threshold")', function() {
      // uncomment below and update the code to test the property nginxHpaCpuUtilizationPercentageThreshold
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property nginxHpaMemoryUtilizationPercentageThreshold (base name: "nginx.hpa.memory_utilization_percentage_threshold")', function() {
      // uncomment below and update the code to test the property nginxHpaMemoryUtilizationPercentageThreshold
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property nginxHpaMinNumberInstances (base name: "nginx.hpa.min_number_instances")', function() {
      // uncomment below and update the code to test the property nginxHpaMinNumberInstances
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

    it('should have the property nginxHpaMaxNumberInstances (base name: "nginx.hpa.max_number_instances")', function() {
      // uncomment below and update the code to test the property nginxHpaMaxNumberInstances
      //var instance = new QoveryApi.ClusterAdvancedSettings();
      //expect(instance).to.be();
    });

  });

}));
