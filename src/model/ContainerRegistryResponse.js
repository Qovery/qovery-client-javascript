/**
 * Qovery API
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Base from './Base';
import ContainerRegistryKindEnum from './ContainerRegistryKindEnum';
import ContainerRegistryResponseAllOfCluster from './ContainerRegistryResponseAllOfCluster';

/**
 * The ContainerRegistryResponse model module.
 * @module model/ContainerRegistryResponse
 * @version $(grep &#39;version&#39; _build/openapi.yaml | head -1 | tr &#39;:&#39; &#39;\n&#39; | tail -1 | tr -d &#39; &#39;)
 */
class ContainerRegistryResponse {
    /**
     * Constructs a new <code>ContainerRegistryResponse</code>.
     * @alias module:model/ContainerRegistryResponse
     * @implements module:model/Base
     * @param id {String} 
     * @param createdAt {Date} 
     */
    constructor(id, createdAt) { 
        Base.initialize(this, id, createdAt);
        ContainerRegistryResponse.initialize(this, id, createdAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, createdAt) { 
        obj['id'] = id;
        obj['created_at'] = createdAt;
    }

    /**
     * Constructs a <code>ContainerRegistryResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContainerRegistryResponse} obj Optional instance to populate.
     * @return {module:model/ContainerRegistryResponse} The populated <code>ContainerRegistryResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContainerRegistryResponse();
            Base.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ContainerRegistryKindEnum.constructFromObject(data['kind']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('cluster')) {
                obj['cluster'] = ContainerRegistryResponseAllOfCluster.constructFromObject(data['cluster']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContainerRegistryResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContainerRegistryResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ContainerRegistryResponse.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // validate the optional field `cluster`
        if (data['cluster']) { // data not null
          ContainerRegistryResponseAllOfCluster.validateJSON(data['cluster']);
        }

        return true;
    }


}

ContainerRegistryResponse.RequiredProperties = ["id", "created_at"];

/**
 * @member {String} id
 */
ContainerRegistryResponse.prototype['id'] = undefined;

/**
 * @member {Date} created_at
 */
ContainerRegistryResponse.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
ContainerRegistryResponse.prototype['updated_at'] = undefined;

/**
 * @member {String} name
 */
ContainerRegistryResponse.prototype['name'] = undefined;

/**
 * @member {module:model/ContainerRegistryKindEnum} kind
 */
ContainerRegistryResponse.prototype['kind'] = undefined;

/**
 * @member {String} description
 */
ContainerRegistryResponse.prototype['description'] = undefined;

/**
 * URL of the container registry
 * @member {String} url
 */
ContainerRegistryResponse.prototype['url'] = undefined;

/**
 * @member {module:model/ContainerRegistryResponseAllOfCluster} cluster
 */
ContainerRegistryResponse.prototype['cluster'] = undefined;


// Implement Base interface:
/**
 * @member {String} id
 */
Base.prototype['id'] = undefined;
/**
 * @member {Date} created_at
 */
Base.prototype['created_at'] = undefined;
/**
 * @member {Date} updated_at
 */
Base.prototype['updated_at'] = undefined;




export default ContainerRegistryResponse;

